name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        node-version: [18, 20]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Install Node.js dependencies
      run: |
        if [ -f package.json ]; then npm ci; fi
        if [ -f package-lock.json ]; then npm ci; fi
    
    - name: Run Python tests
      run: |
        if [ -d "projects" ]; then
          find projects -name "test_*.py" -exec python -m pytest {} \;
        fi
    
    - name: Run Node.js tests
      run: |
        if [ -f package.json ]; then npm test; fi
    
    - name: Run linting
      run: |
        if command -v flake8 &> /dev/null; then flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics; fi
        if command -v eslint &> /dev/null; then npx eslint . --ext .js,.jsx,.ts,.tsx; fi
    
    - name: Check code formatting
      run: |
        if command -v black &> /dev/null; then black --check .; fi
        if command -v prettier &> /dev/null; then npx prettier --check .; fi

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        if [ -f requirements.txt ]; then pip install safety && safety check; fi
        if [ -f package.json ]; then npm audit; fi

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker images
      run: |
        if [ -f Dockerfile ]; then
          docker build -t portfolio-app .
        fi
    
    - name: Build project documentation
      run: |
        if [ -f docs ]; then
          echo "Building documentation..."
          # Add documentation build commands here
        fi
